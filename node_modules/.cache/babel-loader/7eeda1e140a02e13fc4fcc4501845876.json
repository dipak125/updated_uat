{"ast":null,"code":"var _jsxFileName = \"/var/www/html/sbig-csc/portal/src/component/routes/Routes.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Switch, HashRouter, Redirect, withRouter } from \"react-router-dom\";\nimport { Formik, Field, Form } from \"formik\";\nimport { connect } from \"react-redux\";\nimport Loadable from 'react-loadable';\nimport { authValidate } from \"../../store/actions/auth\";\nimport { PrivateRoute } from \"../../shared/private-route\";\nimport Loader from \"react-loader-spinner\";\nimport LogIn from \"../common/login/LogIn\"; // import Motor from '../motor/Motor';\n\nimport SelectBrand from '../SelectBrand/SelectBrand'; // import Products from '../products/Products';\n\nimport Health from '../health/MedicalDetails';\n\nconst componentLoader = () => {\n  return React.createElement(\"div\", {\n    style: {\n      height: \"540px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"Oval\",\n    color: \"#000000\",\n    height: \"50\",\n    width: \"50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nconst loadingContent = componentLoader();\nconst Products = Loadable({\n  loader: () => import(\n  /*webpackChunkName: \"Products\" */\n  \"../products/Products.jsx\"),\n  loading: () => loadingContent\n});\n\nclass Routes extends Component {\n  render() {\n    this.props.onAuthPersist();\n    return React.createElement(React.Fragment, null, React.createElement(HashRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: LogIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/Products\",\n      component: Products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/Health/:productId\",\n      component: Health,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/Select-brand\",\n      component: SelectBrand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      from: \"/\",\n      to: \"/Products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthPersist: () => dispatch(authValidate())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);","map":{"version":3,"sources":["/var/www/html/sbig-csc/portal/src/component/routes/Routes.jsx"],"names":["React","Component","Route","Switch","HashRouter","Redirect","withRouter","Formik","Field","Form","connect","Loadable","authValidate","PrivateRoute","Loader","LogIn","SelectBrand","Health","componentLoader","height","loadingContent","Products","loader","loading","Routes","render","props","onAuthPersist","mapStateToProps","state","token","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch, HashRouter,Redirect, withRouter } from \"react-router-dom\";\r\nimport { Formik, Field, Form } from \"formik\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Loadable from 'react-loadable';\r\nimport { authValidate } from \"../../store/actions/auth\";\r\nimport { PrivateRoute } from \"../../shared/private-route\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport LogIn from \"../common/login/LogIn\";\r\n// import Motor from '../motor/Motor';\r\nimport SelectBrand from '../SelectBrand/SelectBrand';\r\n// import Products from '../products/Products';\r\nimport Health from '../health/MedicalDetails';\r\n\r\nconst componentLoader = () => {\r\n    return (\r\n        <div style={{ height: \"540px\" }}>\r\n            <div className=\"loading\">\r\n                <Loader type=\"Oval\" color=\"#000000\" height=\"50\" width=\"50\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst loadingContent = componentLoader();\r\n\r\nconst Products = Loadable({\r\n    loader: () => import(/*webpackChunkName: \"Products\" */\"../products/Products.jsx\"),\r\n    loading: () => loadingContent\r\n});\r\n\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        this.props.onAuthPersist();\r\n        return (\r\n            <>\r\n                <HashRouter>\r\n                    <Switch>\r\n                        <Route exact path=\"/login\" component={LogIn} />                        \r\n                        <PrivateRoute exact path=\"/Products\" component={Products} />\r\n                        <PrivateRoute exact path=\"/Health/:productId\" component={Health} />\r\n                        <PrivateRoute exact path=\"/Select-brand\" component={SelectBrand} />\r\n                        <Redirect from=\"/\" to=\"/Products\" />\r\n                    </Switch>\r\n                </HashRouter>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n  \r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuthPersist: () => dispatch(authValidate())\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Routes);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}