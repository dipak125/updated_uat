{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n}); // Add a request interceptor\n\ninstance.interceptors.request.use(config => {\n  // Insert authorization token on request call\n  const auth_token = localStorage.getItem('auth_token');\n  if (auth_token) config.headers['Authorization'] = auth_token;\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // Add a response interceptor\n\ninstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.reject(error.response);\n});\nexport default instance;","map":{"version":3,"sources":["/var/www/html/sbig-csc/portal/src/shared/axios.js"],"names":["axios","instance","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","auth_token","localStorage","getItem","headers","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADK,CAAb,CAAjB,C,CAIA;;AAEAL,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCC,MAAM,IAAI;AACxC;AACA,QAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AACA,MAAIF,UAAJ,EAAiBD,MAAM,CAACI,OAAP,CAAe,eAAf,IAAkCH,UAAlC;AAEjB,SAAOD,MAAP;AACH,CAND,EAMGK,KAAK,IAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARD,E,CAUA;;AACAd,QAAQ,CAACM,YAAT,CAAsBW,QAAtB,CAA+BT,GAA/B,CAAoCS,QAAQ,IAAI;AAC5C,SAAOA,QAAP;AACH,CAFD,EAEGH,KAAK,IAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACG,QAArB,CAAP;AACH,CAJD;AAMA,eAAejB,QAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\n// Add a request interceptor\r\n\r\ninstance.interceptors.request.use(config => {\r\n    // Insert authorization token on request call\r\n    const auth_token = localStorage.getItem('auth_token');\r\n    if( auth_token ) config.headers['Authorization'] = auth_token;\r\n\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use( response => {\r\n    return response;\r\n}, error => {\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}