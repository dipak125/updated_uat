{"ast":null,"code":"var _jsxFileName = \"/var/www/html/sbig-csc/portal/src/component/routes/Routes.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Switch, HashRouter, Redirect, withRouter } from \"react-router-dom\";\nimport { Formik, Field, Form } from \"formik\";\nimport { connect } from \"react-redux\";\nimport Loadable from 'react-loadable';\nimport { authValidate } from \"../../store/actions/auth\";\nimport { PrivateRoute } from \"../../shared/private-route\";\nimport Loader from \"react-loader-spinner\";\nimport LogIn from \"../common/login/LogIn\"; // import Motor from '../motor/Motor';\n\nimport SelectBrand from '../SelectBrand/SelectBrand';\nimport Products from '../products/Products';\nimport Health from '../health/Health';\n\nclass Routes extends Component {\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(HashRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: LogIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/Products\",\n      component: Products,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/Health/:productId\",\n      component: Health,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/Select-brand\",\n      component: SelectBrand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      from: \"/\",\n      to: \"/Products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthPersist: () => dispatch(authValidate())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);","map":{"version":3,"sources":["/var/www/html/sbig-csc/portal/src/component/routes/Routes.jsx"],"names":["React","Component","Route","Switch","HashRouter","Redirect","withRouter","Formik","Field","Form","connect","Loadable","authValidate","PrivateRoute","Loader","LogIn","SelectBrand","Products","Health","Routes","render","mapStateToProps","state","token","auth","mapDispatchToProps","dispatch","onAuthPersist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA+D,kBAA/D;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,MAAN,SAAqBlB,SAArB,CAA+B;AAC3BmB,EAAAA,MAAM,GAAG;AACL,WACI,0CACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEL,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,WAAzB;AAAqC,MAAA,SAAS,EAAEE,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,oBAAzB;AAA8C,MAAA,SAAS,EAAEC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,eAAzB;AAAyC,MAAA,SAAS,EAAEF,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,GAAf;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADJ,CADJ;AAaH;;AAf0B;;AAmB/B,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWD;AADf,GAAP;AAID,CALH;;AAOE,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHC,IAAAA,aAAa,EAAE,MAAMD,QAAQ,CAACd,YAAY,EAAb;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAeF,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CN,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch, HashRouter,Redirect, withRouter } from \"react-router-dom\";\r\nimport { Formik, Field, Form } from \"formik\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Loadable from 'react-loadable';\r\nimport { authValidate } from \"../../store/actions/auth\";\r\nimport { PrivateRoute } from \"../../shared/private-route\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport LogIn from \"../common/login/LogIn\";\r\n// import Motor from '../motor/Motor';\r\nimport SelectBrand from '../SelectBrand/SelectBrand';\r\nimport Products from '../products/Products';\r\nimport Health from '../health/Health';\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <HashRouter>\r\n                    <Switch>\r\n                        <Route exact path=\"/login\" component={LogIn} />                        \r\n                        <PrivateRoute exact path=\"/Products\" component={Products} />\r\n                        <PrivateRoute exact path=\"/Health/:productId\" component={Health} />\r\n                        <PrivateRoute exact path=\"/Select-brand\" component={SelectBrand} />\r\n                        <Redirect from=\"/\" to=\"/Products\" />\r\n                    </Switch>\r\n                </HashRouter>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n  \r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuthPersist: () => dispatch(authValidate())\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Routes);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}