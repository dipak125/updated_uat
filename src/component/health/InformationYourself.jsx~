import React, { Component } from 'react';
import { Row, Col, Modal, Button, FormGroup } from 'react-bootstrap';
import DatePicker from "react-datepicker";
import BaseComponent from '.././BaseComponent';
import SideNav from '../common/side-nav/SideNav';
import Footer from '../common/footer/Footer';
import axios from "../../shared/axios";
import { withRouter } from 'react-router-dom';
import { loaderStart, loaderStop } from "../../store/actions/loader";
import { connect } from "react-redux";
import moment from "moment";

import { Formik, Form, Field, ErrorMessage } from 'formik';

class InformationYourself extends Component {
    constructor(props) {
        super(props);

        this.handleShow = this.handleShow.bind(this);
        this.handleClose = this.handleClose.bind(this);

        this.state = {
            show: false,
            insureList: "",
            gender: ""
        };
    }


    handleClose() {
        this.setState({ show: false });
    }

    handleShow() {
        this.setState({ show: true });
    }


    changePlaceHoldClassAdd(e) {
        let element = e.target.parentElement;
        element.classList.add('active');
    }

    changePlaceHoldClassRemove(e) {
        let element = e.target.parentElement;
        e.target.value.length === 0 && element.classList.remove('active');
    }

    handleChangeSubmit = (value) => {
        this.setState({
            gender: value
        });
    }

    handleFormSubmit = () => {
        const {productId} = this.props.match.params
        this.props.history.push(`/MedicalDetails/${productId}`);
    }


    handleSubmit = (values, actions) => {
        var drv = []; 
        for (const key in values) {
            if (values.hasOwnProperty(key)) {
                if ( key.match(/looking_for/gi)){                  
                    drv.push(values[key]);
                }    
            }
        }
        this.setState({
            insureList: drv
        })

        const {productId} = this.props.match.params
        const {gender} = this.state
        const formData = new FormData();
        let looking_for = []
        let i=[];
        let j=[];
        for (const key in values) {
            if (values.hasOwnProperty(key)) {
    
            if ( key.match(/looking_for/gi)){                  
                i = key.substr(12, 1);                                             
                formData.append(`looking_for[${i}]`, values[key]);
            }

            if ( key.match(/dob/gi)){                 
                i = key.substr(4, 1);                                              
                formData.append(`dob[${i}]`, moment(values[key]).format("YYYY-MM-DD"));
            }
        } 
    }
    formData.append('menumaster_id', 2);
    formData.append('gender', gender);
    axios
        .post(`/yourself`, formData)
        .then(res => {
            localStorage.setItem('policyHolder_id', res.data.data.policyHolder_id);
            localStorage.setItem('policyHolder_refNo', res.data.data.policyHolder_refNo);
           
        })
        .catch(err => {
          
          this.props.loadingStop();
        });
        this.handleClose() 
}

    render() {
        const {memberInfo, insureList} = this.state
           
        let initialValues = {}
        let initialValues1 = { 
        }


        return (
            <>
                <BaseComponent>
                    <div className="container-fluid">
                        <div className="row">
                            <div className="col-sm-12 col-md-12 col-lg-2 col-xl-2 pd-l-0">
                                <SideNav />
                            </div>
                            <div className="col-sm-12 col-md-12 col-lg-10 col-xl-10 infobox">
                                <h4 className="text-center mt-3 mb-3">SBI General Insurance Company Limited</h4>
                                <section className="brand">
                                    <div className="boxpd">
                                        <h4 className="m-b-30">Help us with some information about yourself</h4>
                                        <Formik initialValues={initialValues1} onSubmit={this.handleFormSubmit}
                                        // validationSchema={vehicleInspectionValidation}
                                        >
                                        {({ values, errors, setFieldValue, setFieldTouched, isValid, isSubmitting, touched }) => {

                                        return (
                                        <Form>
                                        <div className="row formSection">
                                            <label className="col-md-4">Gender:</label>
                                            <div className="col-md-4">
                                            <Field
                                                name="gender"
                                                component="select"
                                                autoComplete="off"
                                                value={values.gender}
                                                className="formGrp"
                                                onChange={(e) => {
                                                    setFieldValue('gender', e.target.value);
                                                    this.handleChangeSubmit(e.target.value)
                                                }}
                                            >
                                            <option value="">Select gender</option>
                                                <option value="m">Male</option>
                                                <option value="f">Female</option>
                                            </Field>     
                                            </div>
                                        </div>
                                        <div className="row formSection m-b-30">
                                            <label className="col-md-4">Looking to Insure: <br /><span className="small">(Add Family Members to be Insured)</span></label>
                                            <div className="d-flex col-md-4" onClick={this.handleShow} href={'#'}>
                                                <Field
                                                    name="insureList"
                                                    type="text"
                                                    placeholder="Select"
                                                    className="hght45"
                                                    autoComplete="off"
                                                    readonly=""
                                                    onFocus={e => this.changePlaceHoldClassAdd(e)}
                                                    onBlur={e => this.changePlaceHoldClassRemove(e)}
                                                    value={insureList}
                                                />                    
                                                <img src={require('../../assets/images/plus-sign.svg')} alt="" />
                                            </div>
                                        </div>
                                        <div className="cntrbtn">
                                        <Button className={`btnPrimary`} type="submit" disabled={isSubmitting ? true : false} >
                                            {isSubmitting ? 'Wait' : 'Go'}
                                        </Button>
                                        </div>
                                        </Form>
                                        );
                                    }}
                                    </Formik>
                                    </div>

                                </section>
                                <Footer />
                            </div>

                            <Modal className="customModal1" bsSize="md"
                                show={this.state.show}
                                onHide={this.handleClose}>

                                <Formik initialValues={initialValues} onSubmit={this.handleSubmit}
                                // validationSchema={vehicleInspectionValidation}
                                >
                                {({ values, errors, setFieldValue, setFieldTouched, isValid, isSubmitting, touched }) => {

                                return (
                                <Form>
                                    <div className="customModalfamlyForm">
                                        <div className="modal-header">
                                            <h4 className="modal-title">Add Family Members to be Insured</h4>
                                        </div>
                                        <Modal.Body>
                                            <div className="row formSection">
                                                <div className="col-md-4">
                                                    <label className="customCheckBox formGrp formGrp">Self
                                                    <Field
                                                        type="checkbox"
                                                        name="looking_for_0"
                                                        value="self"
                                                        className="user-self"
                                                        onChange={(e) => {
                                                            if (e.target.checked === true) {
                                                                setFieldValue('looking_for_0', e.target.value);
                                                            } else {
                                                                setFieldValue('looking_for_0', '');
                                                                setFieldValue("dob_0", '');
                                                            }
                                                        }}
                                                    checked={values.looking_for_0 == 'self' ? true : false}
                                                    />
                                                        <span className="checkmark mL-0"></span>
                                                        <span className="error-message"> </span>
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp error">                                                  
                                                        <DatePicker
                                                            name="dob_0"
                                                            minDate={new Date()}
                                                            dateFormat="dd MMM yyyy"
                                                            placeholderText="DOB"
                                                            peekPreviousMonth
                                                            peekPreviousYear
                                                            showMonthDropdown
                                                            showYearDropdown
                                                            maxDate={new Date()}
                                                            minDate={new Date(1/1/1900)}
                                                            className="datePckr"
                                                            dropdownMode="select"
                                                            onChange={(value) => {
                                                                setFieldTouched("dob_0");
                                                                setFieldValue("dob_0", value);
                                                              }}
                                                            selected={values.dob_0}
                                                        />

                                                        {/* <span className="error-message">Please enter dob</span> */}
                                                    </label>
                                                </div>
                                            </div>


                                            <div className="row formSection">
                                                <div className="col-md-4">
                                                    <label className="customCheckBox formGrp formGrp">Spouse
                                                    <Field
                                                        type="checkbox"
                                                        name="looking_for_1"
                                                        value="spouse"
                                                        className="user-self"
                                                        onChange={(e) => {
                                                            if (e.target.checked === true) {
                                                                setFieldValue('looking_for_1', e.target.value);
                                                            } else {
                                                                setFieldValue('looking_for_1', '');
                                                                setFieldValue("dob_1", '');
                                                            }
                                                        }}
                                                        checked={values.looking_for_1 == 'spouse' ? true : false}
                                                    />
                                                        <span className="checkmark mL-0"></span>
                                                        <span className="error-message"></span>
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp error">
                                                        <DatePicker
                                                            name="dob_1"
                                                            minDate={new Date()}
                                                            dateFormat="dd MMM yyyy"
                                                            placeholderText="DOB"
                                                            peekPreviousMonth
                                                            peekPreviousYear
                                                            showMonthDropdown
                                                            showYearDropdown
                                                            maxDate={new Date()}
                                                            minDate={new Date(1/1/1900)}
                                                            className="datePckr"
                                                            dropdownMode="select"
                                                            onChange={(value) => {
                                                                setFieldTouched("dob_1");
                                                                setFieldValue("dob_1", value);
                                                              }}
                                                            selected={values.dob_1}
                                                        />

                                                        {/* <span className="error-message">Please enter dob</span> */}
                                                    </label>
                                                </div>
                                            </div>

                                            <div className="row formSection">
                                                <div className="col-md-4">
                                                    <label className="customCheckBox formGrp formGrp">Child 1
                                                    <Field
                                                        type="checkbox"
                                                        name="looking_for_2"
                                                        value="child1"
                                                        className="user-self"
                                                        onChange={(e) => {
                                                            if (e.target.checked === true) {
                                                                setFieldValue('looking_for_2', e.target.value);
                                                            } else {
                                                                setFieldValue('looking_for_2', '');
                                                                setFieldValue("dob_2", '');
                                                            }
                                                        }}
                                                        checked={values.looking_for_2 == 'child1' ? true : false}
                                                    />
                                                        <span className="checkmark mL-0"></span>
                                                        <span className="error-message"></span>
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp error">
                                                        <DatePicker
                                                            name="dob_2"
                                                            minDate={new Date()}
                                                            dateFormat="dd MMM yyyy"
                                                            placeholderText="DOB"
                                                            peekPreviousMonth
                                                            peekPreviousYear
                                                            showMonthDropdown
                                                            showYearDropdown
                                                            maxDate={new Date()}
                                                            minDate={new Date(1/1/1900)}
                                                            className="datePckr"
                                                            dropdownMode="select"
                                                            onChange={(value) => {
                                                                setFieldTouched("dob_2");
                                                                setFieldValue("dob_2", value);
                                                              }}
                                                            selected={values.dob_2}
                                                        />

                                                        {/* <span className="error-message">Please enter dob</span> */}
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp">
                                                    <Field
                                                        name="child1Gender"
                                                        component="select"
                                                        autoComplete="off"
                                                        value={values.child1Gender}
                                                        className="formGrp"
                                                    >
                                                    <option value="">Select gender</option>
                                                        <option value="male">Male</option>
                                                        <option value="female">Female</option>
                                                    </Field>    
                                                    </label>
                                                    {/* <span className="error-message">Please enter dob</span> */}
                                                </div>
                                            </div>

                                            <div className="row formSection">
                                                <div className="col-md-4">
                                                    <label className="customCheckBox formGrp formGrp">Father
                                                    <Field
                                                        type="checkbox"
                                                        name="looking_for_3"
                                                        value="father"
                                                        className="user-self"
                                                        onChange={(e) => {
                                                            if (e.target.checked === true) {
                                                                setFieldValue('looking_for_3', e.target.value);
                                                            } else {
                                                                setFieldValue('looking_for_3', '');
                                                                setFieldValue("dob_3", '');
                                                            }
                                                        }}
                                                        checked={values.looking_for_3 == 'father' ? true : false}
                                                    />
                                                        <span className="checkmark mL-0"></span>
                                                        <span className="error-message"></span>
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp error">
                                                        <DatePicker
                                                            name="dob_3"
                                                            minDate={new Date()}
                                                            dateFormat="dd MMM yyyy"
                                                            placeholderText="DOB"
                                                            peekPreviousMonth
                                                            peekPreviousYear
                                                            showMonthDropdown
                                                            showYearDropdown
                                                            maxDate={new Date()}
                                                            minDate={new Date(1/1/1900)}
                                                            className="datePckr"
                                                            dropdownMode="select"
                                                            onChange={(value) => {
                                                                setFieldTouched("dob_3");
                                                                setFieldValue("dob_3", value);
                                                              }}
                                                            selected={values.dob_3}
                                                        />

                                                        {/* <span className="error-message">Please enter dob</span> */}
                                                    </label>
                                                </div>
                                            </div>

                                            <div className="row formSection">
                                                <div className="col-md-4">
                                                    <label className="customCheckBox formGrp formGrp">Mother
                                                    <Field
                                                        type="checkbox"
                                                        name="looking_for_4"
                                                        value="mother"
                                                        className="user-self"
                                                        onChange={(e) => {
                                                            if (e.target.checked === true) {
                                                                setFieldValue('looking_for_4', e.target.value);
                                                            } else {
                                                                setFieldValue('looking_for_4', '');
                                                                setFieldValue("dob_4", '');
                                                            }
                                                        }}
                                                        checked={values.looking_for_4 == 'mother' ? true : false}
                                                    />
                                                        <span className="checkmark mL-0"></span>
                                                        <span className="error-message"></span>
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp error">
                                                        <DatePicker
                                                            name="dob_4"
                                                            minDate={new Date()}
                                                            dateFormat="dd MMM yyyy"
                                                            placeholderText="DOB"
                                                            peekPreviousMonth
                                                            peekPreviousYear
                                                            showMonthDropdown
                                                            showYearDropdown
                                                            maxDate={new Date()}
                                                            minDate={new Date(1/1/1900)}
                                                            className="datePckr"
                                                            dropdownMode="select"
                                                            onChange={(value) => {
                                                                setFieldTouched("dob_4");
                                                                setFieldValue("dob_4", value);
                                                              }}
                                                            selected={values.dob_4}
                                                        />

                                                        {/* <span className="error-message">Please enter dob</span> */}
                                                    </label>
                                                </div>
                                            </div>

                                            <div className="row formSection">
                                                <div className="col-md-4">
                                                    <label className="customCheckBox formGrp formGrp">Father in law
                                                    <Field
                                                        type="checkbox"
                                                        name="looking_for_5"
                                                        value="fatherInLaw"
                                                        className="user-self"
                                                        onChange={(e) => {
                                                            if (e.target.checked === true) {
                                                                setFieldValue('looking_for_5', e.target.value);
                                                            } else {
                                                                setFieldValue('looking_for_5', '');
                                                                setFieldValue("dob_5", '');
                                                            }
                                                        }}
                                                        checked={values.looking_for_5 == 'fatherInLaw' ? true : false}
                                                    />
                                                        <span className="checkmark mL-0"></span>
                                                        <span className="error-message"></span>
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp error">
                                                        <DatePicker
                                                            name="dob_5"
                                                            minDate={new Date()}
                                                            dateFormat="dd MMM yyyy"
                                                            placeholderText="DOB"
                                                            peekPreviousMonth
                                                            peekPreviousYear
                                                            showMonthDropdown
                                                            showYearDropdown
                                                            maxDate={new Date()}
                                                            minDate={new Date(1/1/1900)}
                                                            className="datePckr"
                                                            dropdownMode="select"
                                                            onChange={(value) => {
                                                                setFieldTouched("dob_5");
                                                                setFieldValue("dob_5", value);
                                                              }}
                                                            selected={values.dob_5}
                                                        />

                                                        {/* <span className="error-message">Please enter dob</span> */}
                                                    </label>
                                                </div>
                                            </div>

                                            <div className="row formSection m-b-45">
                                                <div className="col-md-4">
                                                    <label className="customCheckBox formGrp formGrp">Mother in law
                                                    <Field
                                                        type="checkbox"
                                                        name="looking_for_6"
                                                        value="motherInLaw"
                                                        className="user-self"
                                                        onChange={(e) => {
                                                            if (e.target.checked === true) {
                                                                setFieldValue('looking_for_6', e.target.value);
                                                            } else {
                                                                setFieldValue('looking_for_6', '');
                                                                setFieldValue("dob_6", '');
                                                            }
                                                        }}
                                                        checked={values.looking_for_6 == 'motherInLaw' ? true : false}
                                                    />
                                                        <span className="checkmark mL-0"></span>
                                                        <span className="error-message"></span>
                                                    </label>
                                                </div>

                                                <div className="col-md-4">
                                                    <label className="formGrp error">
                                                        <DatePicker
                                                            name="dob_6"
                                                            minDate={new Date()}
                                                            dateFormat="dd MMM yyyy"
                                                            placeholderText="DOB"
                                                            peekPreviousMonth
                                                            peekPreviousYear
                                                            showMonthDropdown
                                                            showYearDropdown
                                                            maxDate={new Date()}
                                                            minDate={new Date(1/1/1900)}
                                                            className="datePckr"
                                                            dropdownMode="select"
                                                            onChange={(value) => {
                                                                setFieldTouched("dob_6");
                                                                setFieldValue("dob_6", value);
                                                              }}
                                                            selected={values.dob_6}
                                                        />

                                                        {/* <span className="error-message">Please enter dob</span> */}
                                                    </label>
                                                </div>
                                            </div>
                                            <div className="cntrbtn">
                                            <Button className={`btnPrimary`} type="submit" disabled={isSubmitting ? true : false} >
                                                {isSubmitting ? 'Wait' : 'Select'}
                                            </Button>
                                            </div>
                                        </Modal.Body>
                                    </div>
                                    </Form>
                                    );
                                }}
                                </Formik>
                            </Modal>
                        </div>
                    </div>
                </BaseComponent>
            </>
        );
    }
}

const mapStateToProps = state => {
    return {
      loading: state.loader.loading
    };
  };
  
  const mapDispatchToProps = dispatch => {
    return {
      loadingStart: () => dispatch(loaderStart()),
      loadingStop: () => dispatch(loaderStop())
    };
  };

export default withRouter (connect( mapStateToProps, mapDispatchToProps)(InformationYourself));